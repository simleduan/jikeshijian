package com.study.annocation;import java.lang.reflect.Method;import java.util.List;import java.util.stream.Collectors;import java.util.stream.IntStream;public class UseCaseTracker {    public static void trackerUserCase(List<Integer> userCase, Class<?> cl){        //遍历该类所有方法        for (Method method:cl.getDeclaredMethods()             ) {            UseCase annotation = method.getAnnotation(UseCase.class);            if (annotation != null){                userCase.remove(Integer.valueOf(annotation.id()));                System.out.println("Found Use Case "+annotation.id() +"\n"+annotation.description());            }        }        userCase.forEach(i->{            System.out.println("Missing Use Case "+i);        });    }    public static void main(String[] args) {        List<Integer> userCase = IntStream.range(47, 51).boxed().collect(Collectors.toList());        trackerUserCase(userCase,PasswordUtils.class);    }}