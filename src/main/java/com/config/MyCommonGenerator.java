package com.config;import org.mybatis.generator.api.CommentGenerator;import org.mybatis.generator.api.IntrospectedColumn;import org.mybatis.generator.api.IntrospectedTable;import org.mybatis.generator.api.dom.java.*;import org.mybatis.generator.api.dom.xml.XmlElement;import org.mybatis.generator.internal.util.StringUtility;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Properties;//https://www.jianshu.com/p/becfff733516//https://blog.csdn.net/xp_lx1/article/details/80074738//https://segmentfault.com/a/1190000016525887public class MyCommonGenerator implements CommentGenerator {    private Properties properties = new Properties();    private boolean suppressDate = false;    private boolean suppressAllComments = false;    private boolean addRemarkComments = false;    private SimpleDateFormat dateFormat;    public MyCommonGenerator() {    }    public void addJavaFileComment(CompilationUnit compilationUnit) {    }    /**     * mapper注释     * @param xmlElement     */    public void addComment(XmlElement xmlElement) {        /*if (!this.suppressAllComments) {            xmlElement.addElement(new TextElement("<!--"));            StringBuilder sb = new StringBuilder();            sb.append("  WARNING - ");            sb.append("@mbg.generated");            xmlElement.addElement(new TextElement(sb.toString()));            xmlElement.addElement(new TextElement("  This element is automatically generated by MyBatis Generator, do not modify."));            String s = this.getDateString();            if (s != null) {                sb.setLength(0);                sb.append("  This element was generated on ");                sb.append(s);                sb.append('.');                xmlElement.addElement(new TextElement(sb.toString()));            }            xmlElement.addElement(new TextElement("-->"));        }*/    }    public void addRootComment(XmlElement rootElement) {    }    public void addConfigurationProperties(Properties properties) {        this.properties.putAll(properties);        this.suppressDate = StringUtility.isTrue(properties.getProperty("suppressDate"));        this.suppressAllComments = StringUtility.isTrue(properties.getProperty("suppressAllComments"));        this.addRemarkComments = StringUtility.isTrue(properties.getProperty("addRemarkComments"));        String dateFormatString = properties.getProperty("dateFormat");        if (StringUtility.stringHasValue(dateFormatString)) {            this.dateFormat = new SimpleDateFormat(dateFormatString);        }    }    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {        javaElement.addJavaDocLine(" *");        StringBuilder sb = new StringBuilder();        sb.append(" * ");        sb.append("@mbg.generated");        if (markAsDoNotDelete) {            sb.append(" do_not_delete_during_merge");        }        String s = this.getDateString();        if (s != null) {            sb.append(' ');            sb.append(s);        }        javaElement.addJavaDocLine(sb.toString());    }    protected String getDateString() {        if (this.suppressDate) {            return null;        } else {            return this.dateFormat != null ? this.dateFormat.format(new Date()) : (new Date()).toString();        }    }    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {        if (!this.suppressAllComments) {            StringBuilder sb = new StringBuilder();            innerClass.addJavaDocLine("/**");            innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");            sb.append(" * This class corresponds to the database table ");            sb.append(introspectedTable.getFullyQualifiedTable());            innerClass.addJavaDocLine(sb.toString());            this.addJavadocTag(innerClass, false);            innerClass.addJavaDocLine(" */");        }    }    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {        String author = properties.getProperty("author");        String dateFormat = properties.getProperty("dateFormat", "yyyy-MM-dd");        SimpleDateFormat dateFormatter = new SimpleDateFormat(dateFormat);        // 获取表注释        String remarks = introspectedTable.getRemarks();        topLevelClass.addJavaDocLine("/**");        topLevelClass.addJavaDocLine(" * " + remarks);        topLevelClass.addJavaDocLine(" *");        topLevelClass.addJavaDocLine(" * @author " + author);        topLevelClass.addJavaDocLine(" * @date " + dateFormatter.format(new Date()));        topLevelClass.addJavaDocLine(" */");    }    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {        if (!this.suppressAllComments) {            StringBuilder sb = new StringBuilder();            innerEnum.addJavaDocLine("/**");            innerEnum.addJavaDocLine(" * This enum was generated by MyBatis Generator.");            sb.append(" * This enum corresponds to the database table ");            sb.append(introspectedTable.getFullyQualifiedTable());            innerEnum.addJavaDocLine(sb.toString());            this.addJavadocTag(innerEnum, false);            innerEnum.addJavaDocLine(" */");        }    }    public void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {            field.addJavaDocLine("/**");            field.addJavaDocLine(" * " + introspectedColumn.getRemarks());//            addJavadocTag(field, false);            field.addJavaDocLine(" */");        }    }    public void addFieldComment(Field field, IntrospectedTable introspectedTable) {        if (!this.suppressAllComments) {            StringBuilder sb = new StringBuilder();            field.addJavaDocLine("/**");            field.addJavaDocLine(" * This field was generated by MyBatis Generator.");            sb.append(" * This field corresponds to the database table ");            sb.append(introspectedTable.getFullyQualifiedTable());            field.addJavaDocLine(sb.toString());            this.addJavadocTag(field, false);            field.addJavaDocLine(" */");        }    }    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {//        if (!this.suppressAllComments) {//            StringBuilder sb = new StringBuilder();//            method.addJavaDocLine("/**");//            method.addJavaDocLine(" * This method was generated by MyBatis Generator.");//            sb.append(" * This method corresponds to the database table ");//            sb.append(introspectedTable.getFullyQualifiedTable());//            method.addJavaDocLine(sb.toString());//            this.addJavadocTag(method, false);//            method.addJavaDocLine(" */");//        }    }    public void addGetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {            method.addJavaDocLine("/**");            method.addJavaDocLine(" * " + introspectedColumn.getRemarks());            method.addJavaDocLine(" * @return " + introspectedColumn.getActualColumnName() + " " +introspectedColumn.getRemarks());//            addJavadocTag(method, false);            method.addJavaDocLine(" */");        }    }    public void addSetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {            method.addJavaDocLine("/**");            method.addJavaDocLine(" * " + introspectedColumn.getRemarks());            method.addJavaDocLine(" * @return " + introspectedColumn.getActualColumnName() + " " +introspectedColumn.getRemarks());//            addJavadocTag(method, false);            method.addJavaDocLine(" */");        }    }    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {        if (!this.suppressAllComments) {            StringBuilder sb = new StringBuilder();            innerClass.addJavaDocLine("/**");            innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");            sb.append(" * This class corresponds to the database table ");            sb.append(introspectedTable.getFullyQualifiedTable());            innerClass.addJavaDocLine(sb.toString());            this.addJavadocTag(innerClass, markAsDoNotDelete);            innerClass.addJavaDocLine(" */");        }    }}